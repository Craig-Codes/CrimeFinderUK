{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/info/info.component.ts","./src/app/info/info.component.html","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, ViewChild} from '@angular/core'\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\nimport {BrowserModule} from '@angular/platform-browser'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  @ViewChild('tabs') tabsGroup: MatTabGroup;\r\n\r\n  constructor() { }\r\n\r\n  // Function is passed to child component\r\n  resetTabs(){\r\n    this.tabsGroup.selectedIndex = 0;\r\n  }\r\n\r\n}\r\n\r\n\r\n","<body class=\"mat-app-background\">\r\n\r\n<h1 id=\"title\">Crime Finder</h1>\r\n  <mat-tab-group #tabs mat-align-tabs=\"center\" dynamicHeight>\r\n    <mat-tab label=\"Map\">\r\n      <app-map></app-map>\r\n        <ng-template mat-tab-label>\r\n          Map\r\n        <mat-icon class=\"angular-icon\">map</mat-icon>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"Info\">\r\n      <app-info></app-info>\r\n        <ng-template mat-tab-label>\r\n          Stats\r\n        <mat-icon class=\"angular-icon\">info</mat-icon>\r\n    </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"Search\">\r\n      <app-search (resetTabs)=\"resetTabs()\"></app-search>\r\n        <ng-template mat-tab-label>\r\n          Search\r\n        <mat-icon class=\"angular-icon\">search</mat-icon>\r\n        </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n</body>\r\n","import {Component, NgModule, VERSION} from '@angular/core'\r\nimport { HttpClientModule} from '@angular/common/http';\r\nimport {BrowserModule} from '@angular/platform-browser'\r\nimport {InfoComponent} from './info/info.component';\r\nimport {MapComponent} from './map/map.component';\r\nimport {SearchComponent} from './search/search.component';\r\n\r\n// Angular Material\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [ AppComponent,\r\n    InfoComponent,\r\n    MapComponent,\r\n    SearchComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n  ],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\n\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, forkJoin, of, Subject } from \"rxjs\";\r\nimport { map, catchError, } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  private currentData = new Subject();\r\n  public showCurrentData = this.currentData.asObservable();\r\n  // using asObservable() hides the data stream from components, preventing them from using .next(),\r\n  // ensuring data is controlled from only this service\r\n\r\n  // Default values for when no lat / long values are found - central london\r\n  public defaultLat: number = 51.5014;\r\n  public defaultLng: number = -0.1419;\r\n\r\n  isLoading: Subject<boolean> = new Subject<boolean>(); // loading boolean to control loading spinner\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n\r\n  updateData(year: number, month: number, lat: number, long: number) {\r\n    // NEED TO PUT IN AN ALERT BOX WITH LOADING SPINNER DURING THIS!!!\r\n    this.isLoading.next(true);\r\n    const apiRequests = [];  // Hold all of the api request - one for each month\r\n    for(let i = 1; i < 13; i++){  // loop 12 times\r\n      apiRequests.push(this.http.get(`https://data.police.uk/api/crimes-at-location?date=${year}-${i}&lat=${lat}&lng=${long}`)\r\n      .pipe(catchError(error => of(error))))\r\n    }\r\n    let crimeList: any = [];\r\n    let crimeListFiltered: any = [];\r\n    let completedCrimeList: any = [];\r\n    let updatedData = forkJoin(apiRequests).subscribe(res => {\r\n      console.log(\"Data from api\", res);\r\n      crimeList = res.filter(element => element.constructor === Array);  // remove error responses\r\n      crimeListFiltered = crimeList.filter(element => element[0] !== undefined);  // remove null responses\r\n      crimeListFiltered.forEach(crimeArray => {  // loop through each retreived crime array\r\n        crimeArray.forEach(crime => {  // loop through each entry in each crime array, and push them into the one array\r\n          completedCrimeList.push(crime);\r\n        });\r\n      });\r\n\r\n      this.currentData.next(completedCrimeList);\r\n      console.log(\"CrimeList========\", completedCrimeList);\r\n      setTimeout(() => this.isLoading.next(false), 500);  // half a second delay on removal of loading bar\r\n      },\r\n      // REMOVE ALL THIS CODE -> NEED TO PUT MESSAGES IN COMPONENETS IF NO CRIMES ARE FOUND NOT HERE!!!!\r\n      error => { // If non recognised location - revert back to default values\r\n        console.log(`NO DATA FOUND AT LOCATION, DEFAULTING TO BUCKINGHAM PALACE IN JAN ${year}`);\r\n        let updatedData = this.http\r\n          .get(`https://data.police.uk/api/crimes-at-location?date=${year}-01&lat=${this.defaultLat}&lng=${this.defaultLng}`)\r\n          .subscribe(res => {\r\n            this.currentData.next(res);\r\n          })\r\n      });\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit} from '@angular/core';\r\nimport { DataService } from \"src/app/data.service\";\r\n\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n// Interface gives a template of how CrimeData should act\r\ninterface CrimeData {\r\n    id : number;\r\n    date: string;\r\n    category: string;\r\n    outcome: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-info',\r\n  templateUrl: './info.component.html',\r\n  styleUrls: ['./info.component.css']\r\n})\r\n\r\n\r\nexport class InfoComponent implements OnInit{\r\n\r\n  apiData: any;  // stores all retrieved api data\r\n  crimeDataArray: Array<CrimeData> = [];  // array of crime data\r\n\r\n  // Table Setup\r\n  displayedColumns: string[] = ['Id', 'Date', 'Category', 'Outcome'];\r\n  dataSource = new MatTableDataSource<CrimeData>(this.crimeDataArray);\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.showCurrentData.subscribe(data => {\r\n      console.log(\"DATA!!!!!!\", data);\r\n      this.crimeDataArray.length = 0; // clears all elements from the array\r\n      this.apiData = data;\r\n      this.apiData.forEach(crime => {\r\n        // Map the data to a new object, passing this into an array to work as table data\r\n        let mappedCrimeData: CrimeData = {\r\n          category: crime.category,\r\n          id:crime.id,\r\n          date: crime.month,\r\n          outcome: null,\r\n        }\r\n        // If outcome is null from api request, try / catch prevents the error\r\n        try{\r\n          mappedCrimeData.outcome = crime.outcome_status.category\r\n        }\r\n        catch{\r\n          mappedCrimeData.outcome = \"Status update unavaliable\";\r\n        }\r\n        this.crimeDataArray.push(mappedCrimeData);\r\n        this.dataSource.data = this.crimeDataArray;  // update the table datasource\r\n      });\r\n    })\r\n    console.log(\"crime array data ====\", this.crimeDataArray);\r\n  }\r\n}\r\n\r\n\r\n","\r\n<p>Info works -> Say how many crimes found! Explore the table to see the crime details</p>\r\n<div class=\"mat-elevation-z8 table-container\">\r\n<table mat-table [dataSource]=\"dataSource\">\r\n\r\n  <!--- Note that these columns can be defined in any order.\r\n        The actual rendered columns are set as a property on the row definition\" -->\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"Number\">\r\n    <th mat-header-cell *matHeaderCellDef> Number </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.number}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"Id\">\r\n    <th mat-header-cell *matHeaderCellDef> Id </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"Date\">\r\n    <th mat-header-cell *matHeaderCellDef> Date </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Weight Column -->\r\n  <ng-container matColumnDef=\"Category\">\r\n    <th mat-header-cell *matHeaderCellDef> Category </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.category}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Symbol Column -->\r\n  <ng-container matColumnDef=\"Outcome\">\r\n    <th mat-header-cell *matHeaderCellDef> Outcome </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.outcome}} </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n</div>\r\n\r\n\r\n","// Map componenet creates a map and shows users location based on geo-location.\r\n// If no location can be found, a default map is created\r\n\r\nimport { Component } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { AppComponent } from '../app.component';\r\n\r\nimport { DataService } from \"src/app/data.service\";\r\n\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport Overlay from 'ol/Overlay';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport Style from 'ol/style/Style';\r\nimport Icon from 'ol/style/Icon';\r\nimport OSM from 'ol/source/OSM';\r\nimport * as olProj from 'ol/proj';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport { first, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  animations: [\r\n    trigger(\r\n      'loadingAnimation', [\r\n        transition(':enter', [\r\n          style({opacity: 0}),\r\n          animate('500ms ease-in', style({opacity: 1}))\r\n        ]),\r\n        transition(':leave', [\r\n          style({opacity: 1}),\r\n          animate('500ms ease-out', style({opacity: 0})),\r\n        ])\r\n      ]\r\n    )\r\n  ],\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\n\r\nexport class MapComponent {\r\n  map: any;\r\n  apiData: any;  // stores all retrieved api data\r\n\r\n  userLatCoord: number;\r\n  userLngCoord: number;\r\n\r\n  dataIsLoading: boolean;\r\n\r\n  currentMapMarker: any; // reference to the current map marker\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to data Service loading variable changes - control spinner\r\n    this.dataService.isLoading.subscribe( bool => {\r\n      this.dataIsLoading = bool;\r\n      console.log(\"Bool change\", this.dataIsLoading);\r\n    });\r\n\r\n    this.getLocationPermissions()\r\n      .then(this.findUserLocation)  // Attempt to get users initial geolocation info\r\n      .then((coords) => {  // If get geo data, Setup the map from the resulting geolocation data\r\n        console.log(coords);\r\n\r\n        this.userLatCoord = coords[0];\r\n        this.userLngCoord = coords[1];\r\n        // Get current date\r\n        let year = new Date().getFullYear();\r\n        let month =  new Date().getMonth();\r\n\r\n        this.dataService.updateData(year, month, coords[0], coords[1]);  // Make API call with geo data\r\n      })\r\n      .catch(error => {  // If no geo data avalaible, setup map with defaults\r\n        console.log(error)\r\n        // this.setupMap(this.dataService.defaultLat, this.dataService.defaultLng);\r\n        this.dataService.updateData(new Date().getFullYear() -1, 1, this.dataService.defaultLat, this.dataService.defaultLng);\r\n        this.userLatCoord = this.dataService.defaultLat;\r\n        this.userLngCoord = this.dataService.defaultLng;\r\n      });\r\n\r\n    // Subscribe to the dataService using first() so this only triggers once\r\n    this.dataService.showCurrentData.pipe(take(1)).subscribe(data => {\r\n      this.apiData = data;\r\n      console.log(\"DATA!!!!\", this.apiData);\r\n      // BUILD NEW MAP WHEN API DATA IS CHANGED!\r\n      console.log(this.apiData.length);\r\n      if(this.apiData.length < 1){\r\n        console.log(\"no crime data found\");  // Get coords based on the users coords\r\n        this.setupMap(this.userLatCoord, this.userLngCoord);\r\n      }\r\n      else{\r\n        console.log(\"crime data found\");\r\n        this.setupMap(this.apiData[0].location.latitude, this.apiData[0].location.longitude);\r\n      }\r\n    });\r\n\r\n        // Subscribe to the dataService currentData so that we always get upto date crime data\r\n        this.dataService.showCurrentData.subscribe(data => {\r\n          this.apiData = data;\r\n          console.log(\"Editting MAPPPPP\");\r\n          // console.log(\"DATA!!!!\", this.apiData);\r\n          // BUILD NEW MAP WHEN API DATA IS CHANGED!\r\n            console.log(\"crime data found\");\r\n            try{\r\n              this.editMap(this.apiData[0].location.latitude, this.apiData[0].location.longitude);\r\n            }\r\n            catch{\r\n              this.editMap(this.userLatCoord, this.userLngCoord);\r\n            }\r\n\r\n        });\r\n  }\r\n\r\n  getLocationPermissions() {\r\n    // console.log(this.userLocation);\r\n    return new Promise((resolve, reject) => {\r\n      if (navigator.permissions) {\r\n        navigator.permissions.query({ name: 'geolocation' }).then(result => {\r\n          if (result.state === 'granted') {\r\n            resolve(`Location aquired`);\r\n          } else if (result.state === 'prompt') {\r\n            console.log('Permissions requested. Waiting for user input...')\r\n            resolve(`Location aquired`);\r\n          } else if (result.state === 'denied') {\r\n            reject(`Rejected, no user services`);\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // Returns array containing location data\r\n  findUserLocation() {\r\n    return new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        if( position != null){\r\n          console.log(\"Geodata found\");\r\n          console.log(position.coords);\r\n          console.log(\"NEW LOCATIONS\");\r\n          console.log(position.coords.latitude, position.coords.longitude);\r\n          resolve([position.coords.latitude, position.coords.longitude]);\r\n        }\r\n        else{\r\n          console.log(\"no location found\");\r\n          reject([this.dataService.defaultLat, this.dataService.defaultLng]);\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  // Function gets users starting user, pinning it to the map, if not default to London\r\n  setupMap(userLat: number, userLong: number) {\r\n    console.log(\"MAP SETUP\");\r\n    // console.log(this.user);\r\n    const options: object = {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0\r\n    };\r\n\r\n    this.map = new Map({\r\n      target: 'map',\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM()\r\n        })\r\n      ],\r\n      view: new View({\r\n        center: olProj.fromLonLat([userLong, userLat]),\r\n        zoom: 16\r\n      })\r\n    });\r\n\r\n    var pos = olProj.fromLonLat([userLong, userLat]);\r\n    console.log(\"pos ====\", pos);\r\n\r\n    // Marker of crime area\r\n// https://openlayers.org/en/latest/examples/overlay.html\r\n    this.currentMapMarker = new Overlay({\r\n      position: pos,\r\n      positioning: 'center-center',\r\n      element: document.getElementById('marker'),\r\n      stopEvent: false,\r\n    });\r\n    this.map.addOverlay(this.currentMapMarker);\r\n    console.log(\"map loaded fully\");\r\n  }\r\n\r\n  editMap(userLat: number, userLong: number){\r\n\r\n    console.log(\"Editting map\");\r\n\r\n    // Setup new center location\r\n    this.map.setView(new View({\r\n      center: olProj.fromLonLat([userLong, userLat]),\r\n      zoom: 16,\r\n    }));\r\n    var pos = olProj.fromLonLat([userLong, userLat]);\r\n    console.log(\"pos ====\", pos);\r\n\r\n    // Set new map marker location\r\n    this.currentMapMarker = new Overlay({\r\n      position: pos,\r\n      positioning: 'center-center',\r\n      element: document.getElementById('marker'),\r\n      stopEvent: false,\r\n    });\r\n    this.map.addOverlay(this.currentMapMarker);\r\n  }\r\n\r\n\r\n};\r\n","\r\n  <!-- API Key protected, locked down to a set domain from the Bing Maps Dev Center -->\r\n  <div *ngIf=\"dataIsLoading == true\" @loadingAnimation >\r\n    <mat-progress-bar mode=\"indeterminate\" id=\"progress-bar\"></mat-progress-bar>\r\n  </div>\r\n<div div class=\"row\">\r\n    <div id=\"map\"></div>\r\n    <div id=\"marker\" title=\"Marker\"></div>\r\n<div>\r\n","import { Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport { DataService } from \"src/app/data.service\";\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  @Output('resetTabs') resetTabs: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"search component created\");\r\n  }\r\n\r\n  onUpdate(){\r\n    console.log(\"Updated\");\r\n    // switch to map tab\r\n    this.dataService.updateData(new Date().getFullYear() -1, 1, this.dataService.defaultLat, this.dataService.defaultLng);\r\n    this.resetTabs.emit(null); // pass event to parent (app.component.ts);\r\n\r\n  }\r\n\r\n}\r\n","<p>search works!</p>\r\n\r\n<p>Location</p>\r\n<p>Year</p>\r\n<p>Month</p>\r\n\r\n<button (click)=\"onUpdate()\">Update</button>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}